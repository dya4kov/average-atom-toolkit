#include <cmath>
#include <numeric-tools/specfunc/fermi-dirac/complete.h>

using namespace numtools::specfunc::FD;

ThreeHalf::ThreeHalf() {
	a[0] = 4.32326386604283E+4;  b[0] = 3.25218725353467E+4;
	a[1] = 8.55472308218786E+4;  b[1] = 7.01022511904373E+4;
	a[2] = 5.95275291210962E+4;  b[2] = 5.50859144223638E+4;
	a[3] = 1.77294861572005E+4;  b[3] = 1.95942074576400E+4;
	a[4] = 2.21876607796460E+3;  b[4] = 3.20803912586318E+3;
	a[5] = 9.90562948053193E+1;  b[5] = 2.20853967067789E+2;
	a[6] = 1.00000000000000E+0;  b[6] = 5.05580641737527E+0;
	                             b[7] = 1.99507945223266E-2;

	c[0] = 2.80452693148553E-13; d[ 0] =  7.01131732871184E-13;
	c[1] = 8.60096863656367E-11; d[ 1] =  2.10699282897576E-10;
	c[2] = 1.62974620742993E-8;  d[ 2] =  3.94452010378723E-8;
	c[3] = 1.63598843752050E-6;  d[ 3] =  3.84703231868724E-6;
	c[4] = 9.12915407846722E-5;  d[ 4] =  2.04569943213216E-4;
	c[5] = 2.62988766922117E-3;  d[ 5] =  5.31999109566385E-3;
	c[6] = 3.85682997219346E-2;  d[ 6] =  6.39899717779153E-2;
	c[7] = 2.78383256609605E-1;  d[ 7] =  3.14236143831882E-1;
	c[8] = 9.02250179334496E-1;  d[ 8] =  4.70252591891375E-1;
	c[9] = 1.00000000000000E+0;  d[ 9] = -2.15540156936373E-2;
	                             d[10] =  2.34829436438087E-3;
}

double ThreeHalf::value(const double& x) {
	double up = 0.0, down = 0.0;
	double xpow[11] = {0.0};
	double t = 0.0;

	const int m1 = 7, m2 = 10;
	const int k1 = 8, k2 = 11;

	int i;
	xpow[0] = 1.0;
	if (x < 2.0) {
		t = exp(x);
		for (i = 1; i < k1; ++i) {
			xpow[i] = xpow[i - 1]*t;
		}
		for (i = 0; i < m1; ++i) {
			up += xpow[i]*a[i];
		}
		for (i = 0; i < k1; ++i) {
			down += xpow[i]*b[i];
		}	
	}
	else {
		t = sqrt(x);
		for (i = 1; i < k2; ++i) {
			xpow[i] = xpow[i - 1]/(x*x);
		}
		for (i = 0; i < m2; ++i) {
			up += xpow[i]*c[i];			
		}
		for (i = 0; i < k2; ++i) {
			down += xpow[i]*d[i];
		}
		t = t*x*x;
	}	
	return t*up/down;
}